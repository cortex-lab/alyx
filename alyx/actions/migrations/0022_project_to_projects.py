# Generated by Django 4.2.10 on 2024-03-14 14:28
import logging

from django.db import migrations
from django.db.models import F, Q

logger = logging.getLogger(__name__)


def project2projects(apps, schema_editor):
    """
    Find sessions where the project field (singular) value is not in the projects (plural) many-to-many
    field and updates them.

    Tested on local instance.
    """
    Session = apps.get_model('actions', 'Session')
    sessions = Session.objects.exclude(Q(project__isnull=True) | Q(projects=F('project')))

    # Check query worked
    # from iblutil.util import ensure_list
    # for session in sessions.values('pk', 'project', 'projects'):
    #     assert session['project'] not in ensure_list(session['projects'])

    for session in sessions:
        session.projects.add(session.project)
        # session.project = None
        # session.save()  # No need to save

    assert Session.objects.exclude(Q(project__isnull=True) | Q(projects=F('project'))).count() == 0
    logger.info(f'project -> projects: {sessions.count():,g} sessions updated')


class Migration(migrations.Migration):

    dependencies = [
        ('actions', '0021_alter_session_extended_qc'),
    ]

    operations = [migrations.RunPython(project2projects)]
