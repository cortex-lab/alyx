name: CI

on:
  push:
    branches:
#      - master
#      - dev
      - pip_req_txt_test
#  pull_request:
#    branches:
#      - master
#      - dev

jobs:
  run_tests:
    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres
#        env:
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_USER: postgres
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432
    steps:
      - uses: actions/checkout@v2
#      - name: Build database
#        run: psql -c "CREATE DATABASE githubactions;" -U postgres -h localhost -p 5432
#        env:
#          PGPASSWORD: postgres
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.7'
      - name: Install dependecies
        run: |
          python --version
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage coveralls
        env:
          PIP_USE_MIRRORS: true
#      - name: Run tests
#        run: |
#          sudo touch /var/log/alyx.log; sudo chmod 776 /var/log/alyx.log
#          sudo touch /var/log/alyx_json.log; sudo chmod 776 /var/log/alyx_json.log
#          cd alyx
#          mv alyx/settings_ci.py alyx/settings.py
#          coverage run manage.py test -n
#          coveralls --service=github
#        env:
#          DJANGO_SETTINGS_MODULE: alyx.settings
#          PYTHONPATH: $HOME/builds/cortexlab/alyx
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Flake
#        run: |
#          cd alyx
#          flake8 .
      - name: Generate pip requirements frozen
        run: |
          pip freeze > requirements_frozen.txt
          echo ">>> Contents of requirements_frozen.txt <<<"
          cat requirements_frozen.txt
      - name: Copy files to S3
        shell: bash
        env:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws_s3_bucket: ${{ secrets.AWS_S3BUCKET_NAME }}
          aws_region: ${{ secrets.AWS_REGION }}
        run: |
          sudo apt-get update && sudo apt-get -y install awscli
          aws configure set aws_access_key_id $aws_key_id
          aws configure set aws_secret_access_key $aws_secret_access_key 
          aws configure set default.region $aws_region
          aws s3 cp requirements_frozen.txt s3://$aws_s3_bucket/github_actions/
