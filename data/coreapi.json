{
 "_type": "document",
 "_meta": {
  "url": "http://localhost:8000/docs/",
  "title": "Alyx REST API documentation"
 },
 "auth-token": {
  "create": {
   "_type": "link",
   "url": "/auth-token",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "username",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Username",
      "description": "Valid username for authentication"
     }
    },
    {
     "name": "password",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Password",
      "description": "Valid password for authentication"
     }
    }
   ]
  }
 },
 "brain-regions": {
  "list": {
   "_type": "link",
   "url": "/brain-regions",
   "action": "get",
   "description": "**FILTERS**\n\n-   **id**: Allen primary key: `/brain-regions?id=687`\n-   **acronym**: iexact on acronym `/brain-regions?acronym=RSPv5`\n-   **name**: icontains on name `/brain-regions?name=retrosplenial`\n-   **description**: icontains on description `/brain-regions?description=RSPv5`\n-   **parent**: get child nodes `/brain-regions?parent=315`\n-   **ancestors**: get all ancestors for a given ID\n-   **descendants**: get all descendants for a given ID\n\n[===> brain region model reference](/admin/doc/models/experiments.brainregion)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "acronym",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "parent",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "ancestors",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "descendants",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/brain-regions/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A unique value identifying this brain region."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/brain-regions/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A unique value identifying this brain region."
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/brain-regions/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A unique value identifying this brain region."
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    }
   ]
  }
 },
 "cache": {
  "info": {
   "list": {
    "_type": "link",
    "url": "/cache/info/",
    "action": "get"
   }
  }
 },
 "cache.zip": {
  "list": {
   "_type": "link",
   "url": "/cache.zip",
   "action": "get"
  }
 },
 "channels": {
  "list": {
   "_type": "link",
   "url": "/channels",
   "action": "get",
   "description": "**FILTERS**\n\n-   **subject**: subject nickname: `/channels?subject=Algernon`\n-   **session**: UUID `/channels?session=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **lab**: lab name `/channels?lab=wittenlab`\n-   **probe_insertion**: UUID  `/channels?probe_insertion=aad23144-0e52-4eac-80c5-c4ee2decb198`\n\n[===> channel model reference](/admin/doc/models/experiments.channel)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "axial",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lateral",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "x",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "y",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "z",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "brain_region",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "trajectory_estimate",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "probe_insertion",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/channels",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "trajectory_estimate",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Trajectory estimate",
      "description": ""
     }
    },
    {
     "name": "brain_region",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Brain region",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "axial",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Axial",
      "description": "Distance in micrometers along the probe from the tip. 0 means the tip."
     }
    },
    {
     "name": "lateral",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Lateral",
      "description": "Distance in micrometers across the probe"
     }
    },
    {
     "name": "x",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "X-ml (um)",
      "description": "brain surface medio-lateral coordinate (um) ofthe insertion, right +, relative to Bregma"
     }
    },
    {
     "name": "y",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Y-ap (um)",
      "description": "brain surface antero-posterior coordinate (um) of the insertion, front +, relative to Bregma"
     }
    },
    {
     "name": "z",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Z-dv (um)",
      "description": "brain surface dorso-ventral coordinate (um) of the insertion, up +, relative to Bregma"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/channels/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this channel."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/channels/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this channel."
     }
    },
    {
     "name": "trajectory_estimate",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Trajectory estimate",
      "description": ""
     }
    },
    {
     "name": "brain_region",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Brain region",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "axial",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Axial",
      "description": "Distance in micrometers along the probe from the tip. 0 means the tip."
     }
    },
    {
     "name": "lateral",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Lateral",
      "description": "Distance in micrometers across the probe"
     }
    },
    {
     "name": "x",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "X-ml (um)",
      "description": "brain surface medio-lateral coordinate (um) ofthe insertion, right +, relative to Bregma"
     }
    },
    {
     "name": "y",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Y-ap (um)",
      "description": "brain surface antero-posterior coordinate (um) of the insertion, front +, relative to Bregma"
     }
    },
    {
     "name": "z",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Z-dv (um)",
      "description": "brain surface dorso-ventral coordinate (um) of the insertion, up +, relative to Bregma"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/channels/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this channel."
     }
    },
    {
     "name": "trajectory_estimate",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Trajectory estimate",
      "description": ""
     }
    },
    {
     "name": "brain_region",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Brain region",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "axial",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Axial",
      "description": "Distance in micrometers along the probe from the tip. 0 means the tip."
     }
    },
    {
     "name": "lateral",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Lateral",
      "description": "Distance in micrometers across the probe"
     }
    },
    {
     "name": "x",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "X-ml (um)",
      "description": "brain surface medio-lateral coordinate (um) ofthe insertion, right +, relative to Bregma"
     }
    },
    {
     "name": "y",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Y-ap (um)",
      "description": "brain surface antero-posterior coordinate (um) of the insertion, front +, relative to Bregma"
     }
    },
    {
     "name": "z",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Z-dv (um)",
      "description": "brain surface dorso-ventral coordinate (um) of the insertion, up +, relative to Bregma"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/channels/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this channel."
     }
    }
   ]
  }
 },
 "check-protected": {
  "list": {
   "_type": "link",
   "url": "/check-protected",
   "action": "get",
   "description": "Endpoint to check if set of files are protected or not\n\nThe session is retrieved by the ALF convention in the relative path, so this field has to\nmatch the format Subject/Date/Number as shown below.\n\nThe client side REST query should look like this:\n\n```python\nr_ = {'created_by': 'user_name_alyx',\n      'path': 'ZM_1085/2019-02-12/002/alf',  # relative path to repo path\n      'filenames': ['file1', 'file2'],\n      }\n```\n\nReturns a response indicating if any of the datasets are protected or not\n-   Status 403 if a dataset is protected, details contains a list of protected datasets\n-   Status 200 is none of the datasets are protected",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  }
 },
 "chronic-insertions": {
  "list": {
   "_type": "link",
   "url": "/chronic-insertions",
   "action": "get",
   "description": "**FILTERS**\n\n-   **name**: chronic insertion name `/chronic-insertions?name=probe00`\n-   **subject**: subject nickname: `/chronic-insertions?subject=Algernon`\n-   **lab**: lab name `/chronic-insertions?lab=UCLA`\n-   **model**: probe model name `/insertions?model=3A`\n-   **probe**: probe UUID\n`/chronic-insertions?probe=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **session**: session UUID\n`/chronic-insertions?session=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **serial**: serial no. of probe `/chronic-insertions?serial=101010`\n-   **atlas_name**: returns a session if any channel name icontains\n the value: `/chronic-insertions?brain_region=visual cortex`\n-   **atlas_acronym**: returns a session if any of its channels name exactly\n matches the value `/chronic-insertions?atlas_acronym=SSp-m4`, cf Allen CCFv2017\n-   **atlas_id**: returns a session if any of its channels id matches the\n provided value: `/chronic-insertions?atlas_id=950`, cf Allen CCFv2017\n\n[===> chronic insertion model reference](/admin/doc/models/experiments.chronicinsertion)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "users",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "procedures",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "narrative",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "end_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "serial",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "model",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "probe",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_acronym",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_id",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/chronic-insertions",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "model",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Model",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Start time",
      "description": ""
     }
    },
    {
     "name": "serial",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Serial",
      "description": "Probe serial number"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/chronic-insertions/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this chronic insertion."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/chronic-insertions/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this chronic insertion."
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "model",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Model",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Start time",
      "description": ""
     }
    },
    {
     "name": "serial",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Serial",
      "description": "Probe serial number"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/chronic-insertions/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this chronic insertion."
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "model",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Model",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Start time",
      "description": ""
     }
    },
    {
     "name": "serial",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Serial",
      "description": "Probe serial number"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/chronic-insertions/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this chronic insertion."
     }
    }
   ]
  }
 },
 "data-formats": {
  "list": {
   "_type": "link",
   "url": "/data-formats",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/data-formats",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "short identifying name, e.g. 'npy'"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Human-readable description of the file format e.g. 'npy-formatted square numerical array'."
     }
    },
    {
     "name": "file_extension",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "File extension",
      "description": "file extension, starting with a dot."
     }
    },
    {
     "name": "matlab_loader_function",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Matlab loader function",
      "description": "Name of MATLAB loader function'."
     }
    },
    {
     "name": "python_loader_function",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Python loader function",
      "description": "Name of Python loader function'."
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/data-formats/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "short identifying name, e.g. 'npy'"
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/data-formats/{name}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "short identifying name, e.g. 'npy'"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "short identifying name, e.g. 'npy'"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Human-readable description of the file format e.g. 'npy-formatted square numerical array'."
     }
    },
    {
     "name": "file_extension",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "File extension",
      "description": "file extension, starting with a dot."
     }
    },
    {
     "name": "matlab_loader_function",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Matlab loader function",
      "description": "Name of MATLAB loader function'."
     }
    },
    {
     "name": "python_loader_function",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Python loader function",
      "description": "Name of Python loader function'."
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/data-formats/{name}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "short identifying name, e.g. 'npy'"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "short identifying name, e.g. 'npy'"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Human-readable description of the file format e.g. 'npy-formatted square numerical array'."
     }
    },
    {
     "name": "file_extension",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "File extension",
      "description": "file extension, starting with a dot."
     }
    },
    {
     "name": "matlab_loader_function",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Matlab loader function",
      "description": "Name of MATLAB loader function'."
     }
    },
    {
     "name": "python_loader_function",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Python loader function",
      "description": "Name of Python loader function'."
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/data-formats/{name}",
   "action": "delete",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "short identifying name, e.g. 'npy'"
     }
    }
   ]
  }
 },
 "data-repository": {
  "list": {
   "_type": "link",
   "url": "/data-repository",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "globus_is_personal",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "globus_endpoint_id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/data-repository",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "timezone",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Timezone",
      "description": "Timezone of the server (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
     }
    },
    {
     "name": "globus_path",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Globus path",
      "description": "absolute path to the repository on the server e.g. /mnt/something/"
     }
    },
    {
     "name": "hostname",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hostname",
      "description": "Host name of the network drive"
     }
    },
    {
     "name": "data_url",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data url",
      "description": "URL of the data repository, if it is accessible via HTTP"
     }
    },
    {
     "name": "repository_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Repository type",
      "description": ""
     }
    },
    {
     "name": "globus_endpoint_id",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Globus endpoint id",
      "description": "UUID of the globus endpoint"
     }
    },
    {
     "name": "globus_is_personal",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Globus is personal",
      "description": "whether the Globus endpoint is personal or not. By default, Globus cannot transfer a file between two personal endpoints."
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/data-repository/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/data-repository/{name}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "timezone",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Timezone",
      "description": "Timezone of the server (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
     }
    },
    {
     "name": "globus_path",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Globus path",
      "description": "absolute path to the repository on the server e.g. /mnt/something/"
     }
    },
    {
     "name": "hostname",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hostname",
      "description": "Host name of the network drive"
     }
    },
    {
     "name": "data_url",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data url",
      "description": "URL of the data repository, if it is accessible via HTTP"
     }
    },
    {
     "name": "repository_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Repository type",
      "description": ""
     }
    },
    {
     "name": "globus_endpoint_id",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Globus endpoint id",
      "description": "UUID of the globus endpoint"
     }
    },
    {
     "name": "globus_is_personal",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Globus is personal",
      "description": "whether the Globus endpoint is personal or not. By default, Globus cannot transfer a file between two personal endpoints."
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/data-repository/{name}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "timezone",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Timezone",
      "description": "Timezone of the server (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
     }
    },
    {
     "name": "globus_path",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Globus path",
      "description": "absolute path to the repository on the server e.g. /mnt/something/"
     }
    },
    {
     "name": "hostname",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hostname",
      "description": "Host name of the network drive"
     }
    },
    {
     "name": "data_url",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data url",
      "description": "URL of the data repository, if it is accessible via HTTP"
     }
    },
    {
     "name": "repository_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Repository type",
      "description": ""
     }
    },
    {
     "name": "globus_endpoint_id",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Globus endpoint id",
      "description": "UUID of the globus endpoint"
     }
    },
    {
     "name": "globus_is_personal",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Globus is personal",
      "description": "whether the Globus endpoint is personal or not. By default, Globus cannot transfer a file between two personal endpoints."
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/data-repository/{name}",
   "action": "delete",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  }
 },
 "data-repository-type": {
  "list": {
   "_type": "link",
   "url": "/data-repository-type",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/data-repository-type",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/data-repository-type/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/data-repository-type/{name}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/data-repository-type/{name}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/data-repository-type/{name}",
   "action": "delete",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  }
 },
 "dataset-types": {
  "list": {
   "_type": "link",
   "url": "/dataset-types",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/dataset-types",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Short identifying nickname, e.g. 'spikes.times'"
     }
    },
    {
     "name": "created_by",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created by",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Human-readable description of data type. Should say what is in the file, and how to read it. For DataCollections, it should list what Datasets are expected in the the collection. E.g. 'Files related to spike events, including spikes.times.npy, spikes.clusters.npy, spikes.amps.npy, spikes.depths.npy"
     }
    },
    {
     "name": "filename_pattern",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Filename pattern",
      "description": "File name pattern (with wildcards) for this file in ALF naming convention. E.g. 'spikes.times.*' or '*.timestamps.*', or 'spikes.*.*' for a DataCollection, which would include all files starting with the word 'spikes'. NB: Case-insensitive matching.If null, the name field must match the object.attribute part of the filename."
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/dataset-types/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Short identifying nickname, e.g. 'spikes.times'"
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/dataset-types/{name}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Short identifying nickname, e.g. 'spikes.times'"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Short identifying nickname, e.g. 'spikes.times'"
     }
    },
    {
     "name": "created_by",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created by",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Human-readable description of data type. Should say what is in the file, and how to read it. For DataCollections, it should list what Datasets are expected in the the collection. E.g. 'Files related to spike events, including spikes.times.npy, spikes.clusters.npy, spikes.amps.npy, spikes.depths.npy"
     }
    },
    {
     "name": "filename_pattern",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Filename pattern",
      "description": "File name pattern (with wildcards) for this file in ALF naming convention. E.g. 'spikes.times.*' or '*.timestamps.*', or 'spikes.*.*' for a DataCollection, which would include all files starting with the word 'spikes'. NB: Case-insensitive matching.If null, the name field must match the object.attribute part of the filename."
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/dataset-types/{name}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Short identifying nickname, e.g. 'spikes.times'"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Short identifying nickname, e.g. 'spikes.times'"
     }
    },
    {
     "name": "created_by",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created by",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Human-readable description of data type. Should say what is in the file, and how to read it. For DataCollections, it should list what Datasets are expected in the the collection. E.g. 'Files related to spike events, including spikes.times.npy, spikes.clusters.npy, spikes.amps.npy, spikes.depths.npy"
     }
    },
    {
     "name": "filename_pattern",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Filename pattern",
      "description": "File name pattern (with wildcards) for this file in ALF naming convention. E.g. 'spikes.times.*' or '*.timestamps.*', or 'spikes.*.*' for a DataCollection, which would include all files starting with the word 'spikes'. NB: Case-insensitive matching.If null, the name field must match the object.attribute part of the filename."
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/dataset-types/{name}",
   "action": "delete",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Short identifying nickname, e.g. 'spikes.times'"
     }
    }
   ]
  }
 },
 "datasets": {
  "list": {
   "_type": "link",
   "url": "/datasets",
   "action": "get",
   "description": "**FILTERS**\n-   **subject**: subject nickname: `/datasets?subject=Algernon`\n-   **lab**: lab name `/datsets?lab=wittenlab`\n-   **created_date**: dataset registration date `/datasets?created_date=2020-02-16`\n-   **date**: session start time date `/datasets?date=2020-02-16`\n-   **created_by**: lab member creation `/datasets?created_by=root`\n-   **experiment_number**: session number  `/datasets?experiment_number=1`\n-   **created_date_gte**: greater/equal creation date  `/datasets?created_date_gte=2020-02-16`\n-   **created_date_lte**: lower/equal creation date  `/datasets?created_date_lte=2020-02-16`\n-   **exists**: only returns datasets for which a file record exists or doesn't exit on a\nserver repo (boolean)  `/datasets?exists=True`\n-   **probe_insertions**: probe insertion id '/datasets?probe_insertion=uuid\n-   **tag**: tag name '/datasets?tag=repeated_site\n-   **public**: only returns datasets that are public or not public\n-   **protected**: only returns datasets that are protected or not protected\n-   **qc**: only returns datasets with this QC value `/datasets?qc=PASS`\n\n[===> dataset model reference](/admin/doc/models/data.dataset)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "created_by",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "created_datetime",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "generating_software",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "provenance_directory",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "content_type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "object_id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "file_size",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "md5",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "hash",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "version",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "collection",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset_type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "data_format",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "revision",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "tags",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "auto_datetime",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "default_dataset",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "qc",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "created_date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "experiment_number",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "created_date_gte",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "created_date_lte",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "exists",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "probe_insertion",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "public",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "protected",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "tag",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/datasets",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "created_by",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created by",
      "description": ""
     }
    },
    {
     "name": "created_datetime",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created datetime",
      "description": "The creation datetime."
     }
    },
    {
     "name": "dataset_type",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Dataset type",
      "description": ""
     }
    },
    {
     "name": "data_format",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data format",
      "description": ""
     }
    },
    {
     "name": "collection",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Collection",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "file_size",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "File size",
      "description": ""
     }
    },
    {
     "name": "hash",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hash",
      "description": ""
     }
    },
    {
     "name": "version",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Version",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date",
      "description": ""
     }
    },
    {
     "name": "number",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Number",
      "description": ""
     }
    },
    {
     "name": "revision",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Revision",
      "description": ""
     }
    },
    {
     "name": "default_dataset",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Default dataset",
      "description": ""
     }
    },
    {
     "name": "tags",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Tags",
      "description": ""
     }
    },
    {
     "name": "qc",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Qc",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/datasets/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this dataset."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/datasets/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this dataset."
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "created_by",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created by",
      "description": ""
     }
    },
    {
     "name": "created_datetime",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created datetime",
      "description": "The creation datetime."
     }
    },
    {
     "name": "dataset_type",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Dataset type",
      "description": ""
     }
    },
    {
     "name": "data_format",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data format",
      "description": ""
     }
    },
    {
     "name": "collection",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Collection",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "file_size",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "File size",
      "description": ""
     }
    },
    {
     "name": "hash",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hash",
      "description": ""
     }
    },
    {
     "name": "version",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Version",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date",
      "description": ""
     }
    },
    {
     "name": "number",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Number",
      "description": ""
     }
    },
    {
     "name": "revision",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Revision",
      "description": ""
     }
    },
    {
     "name": "default_dataset",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Default dataset",
      "description": ""
     }
    },
    {
     "name": "tags",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Tags",
      "description": ""
     }
    },
    {
     "name": "qc",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Qc",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/datasets/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this dataset."
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "created_by",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created by",
      "description": ""
     }
    },
    {
     "name": "created_datetime",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created datetime",
      "description": "The creation datetime."
     }
    },
    {
     "name": "dataset_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Dataset type",
      "description": ""
     }
    },
    {
     "name": "data_format",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data format",
      "description": ""
     }
    },
    {
     "name": "collection",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Collection",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "file_size",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "File size",
      "description": ""
     }
    },
    {
     "name": "hash",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hash",
      "description": ""
     }
    },
    {
     "name": "version",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Version",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date",
      "description": ""
     }
    },
    {
     "name": "number",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Number",
      "description": ""
     }
    },
    {
     "name": "revision",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Revision",
      "description": ""
     }
    },
    {
     "name": "default_dataset",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Default dataset",
      "description": ""
     }
    },
    {
     "name": "tags",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Tags",
      "description": ""
     }
    },
    {
     "name": "qc",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Qc",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/datasets/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this dataset."
     }
    }
   ]
  }
 },
 "downloads": {
  "list": {
   "_type": "link",
   "url": "/downloads",
   "action": "get",
   "description": "**FILTERS**\n\n-   **user**: Labmember name: `/downloads?user=jimmyjazz`\n-   **json**: icontains on json: `/downloads?json=processing`\n-   **count**: count number: `/downloads?count=5`\n-   **dataset_type**: icontains on dataset type`/downloads?dataset_type=camera`",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "count",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "user",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset_type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/downloads/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this download."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/downloads/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this download."
     }
    },
    {
     "name": "user",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    },
    {
     "name": "count",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Count",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/downloads/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this download."
     }
    },
    {
     "name": "user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    },
    {
     "name": "count",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Count",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  }
 },
 "fields-of-view": {
  "list": {
   "_type": "link",
   "url": "/fields-of-view",
   "action": "get",
   "description": "**FILTERS**\n\n-   **provenance**: field of view provenance\n    must one of the strings among those choices:\n    'Estimate', 'Functional', 'Landmark', 'Histology'.\n    `/fields-of-view?provenance=Estimate`\n-   **atlas**: One or more brain regions covered by a field of view\n-   **subject**: subject nickname: `/fields-of-view?subject=Algernon`\n-   **project**: the project name\n-   **date**: session date: `/fields-of-view?date=2020-01-15`\n-   **experiment_number**: session number `/fields-of-view?experiment_number=1`\n-   **session**: `/fields-of-view?session=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **name**: field of view name `/trajectories?name=FOV_01`\n\n[===> FOV model reference](/admin/doc/models/experiments.fov)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "imaging_type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "datasets",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "stack",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "project",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "experiment_number",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset_types",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_acronym",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_id",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/fields-of-view",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "imaging_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Imaging type",
      "description": ""
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "session",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "stack",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Stack",
      "description": ""
     }
    },
    {
     "name": "datasets",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Datasets",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/fields-of-view/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this field of view."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/fields-of-view/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this field of view."
     }
    },
    {
     "name": "imaging_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Imaging type",
      "description": ""
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "session",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "stack",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Stack",
      "description": ""
     }
    },
    {
     "name": "datasets",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Datasets",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/fields-of-view/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this field of view."
     }
    },
    {
     "name": "imaging_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Imaging type",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "stack",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Stack",
      "description": ""
     }
    },
    {
     "name": "datasets",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Datasets",
      "description": ""
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/fields-of-view/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this field of view."
     }
    }
   ]
  }
 },
 "files": {
  "list": {
   "_type": "link",
   "url": "/files",
   "action": "get",
   "description": "**FILTERS**\n\n-   **dataset**: dataset UUID: `/files?dataset=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **exists**: Bool `/files?exists=False`\n-   **lab**: lab name `/files?lab=wittenlab`\n-   **data_repository**: data repository name `/files?data_repository=mainen_lab_SR`\n-   **globus_is_personal**: bool type of Globus endpoint `/files?globus_is_personal=True`\n\n[===> file record model reference](/admin/doc/models/data.filerecord)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "data_repository",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "relative_path",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "exists",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "globus_is_personal",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/files",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "dataset",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Dataset",
      "description": ""
     }
    },
    {
     "name": "data_repository",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data repository",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "relative_path",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Relative path",
      "description": "path name within repository"
     }
    },
    {
     "name": "exists",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Exists",
      "description": "Whether the file exists in the data repository"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/files/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this file record."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/files/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this file record."
     }
    },
    {
     "name": "dataset",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Dataset",
      "description": ""
     }
    },
    {
     "name": "data_repository",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data repository",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "relative_path",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Relative path",
      "description": "path name within repository"
     }
    },
    {
     "name": "exists",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Exists",
      "description": "Whether the file exists in the data repository"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/files/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this file record."
     }
    },
    {
     "name": "dataset",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Dataset",
      "description": ""
     }
    },
    {
     "name": "data_repository",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data repository",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "relative_path",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Relative path",
      "description": "path name within repository"
     }
    },
    {
     "name": "exists",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Exists",
      "description": "Whether the file exists in the data repository"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/files/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this file record."
     }
    }
   ]
  }
 },
 "fov-location": {
  "list": {
   "_type": "link",
   "url": "/fov-location",
   "action": "get",
   "description": "**FILTERS**\n\n-   **provenance**: field of view provenance\n    must one of the strings among those choices:\n    'Estimate', 'Functional', 'Landmark', 'Histology'\n    `/fov-location?provenance=Estimate`\n-   **fov: field of view: `/fov-location?fov=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **default_provenance**: default provenance: `/fov-location?default_provenance=True`\n-   **brain_location**: one or more brain location IDs:\n    `/fov-location?brain_location=[10, 263]`\n\n[===> FOVLocation model reference](/admin/doc/models/experiments.fovlocation)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "field_of_view",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "provenance",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "default_provenance",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "coordinate_system",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "auto_datetime",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "x",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "y",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "z",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "n_xyz",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "brain_region",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/fov-location",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "brain_region",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Brain region",
      "description": ""
     }
    },
    {
     "name": "coordinate_system",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Coordinate system",
      "description": ""
     }
    },
    {
     "name": "provenance",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "enum",
      "title": "Provenance",
      "description": "",
      "enum": [
       "E",
       "F",
       "L",
       "H"
      ]
     }
    },
    {
     "name": "x",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "X",
      "description": ""
     }
    },
    {
     "name": "y",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Y",
      "description": ""
     }
    },
    {
     "name": "z",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Z",
      "description": ""
     }
    },
    {
     "name": "n_xyz",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "N xyz",
      "description": ""
     }
    },
    {
     "name": "default_provenance",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Default provenance",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/fov-location/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this field of view location."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/fov-location/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this field of view location."
     }
    },
    {
     "name": "brain_region",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Brain region",
      "description": ""
     }
    },
    {
     "name": "coordinate_system",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Coordinate system",
      "description": ""
     }
    },
    {
     "name": "provenance",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "enum",
      "title": "Provenance",
      "description": "",
      "enum": [
       "E",
       "F",
       "L",
       "H"
      ]
     }
    },
    {
     "name": "x",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "X",
      "description": ""
     }
    },
    {
     "name": "y",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Y",
      "description": ""
     }
    },
    {
     "name": "z",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Z",
      "description": ""
     }
    },
    {
     "name": "n_xyz",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "N xyz",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "default_provenance",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Default provenance",
      "description": ""
     }
    },
    {
     "name": "field_of_view",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Field of view",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/fov-location/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this field of view location."
     }
    },
    {
     "name": "brain_region",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Brain region",
      "description": ""
     }
    },
    {
     "name": "coordinate_system",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Coordinate system",
      "description": ""
     }
    },
    {
     "name": "provenance",
     "location": "form",
     "schema": {
      "_type": "enum",
      "title": "Provenance",
      "description": "",
      "enum": [
       "E",
       "F",
       "L",
       "H"
      ]
     }
    },
    {
     "name": "x",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "X",
      "description": ""
     }
    },
    {
     "name": "y",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Y",
      "description": ""
     }
    },
    {
     "name": "z",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Z",
      "description": ""
     }
    },
    {
     "name": "n_xyz",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "N xyz",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "default_provenance",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Default provenance",
      "description": ""
     }
    },
    {
     "name": "field_of_view",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Field of view",
      "description": ""
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/fov-location/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this field of view location."
     }
    }
   ]
  }
 },
 "imaging-stack": {
  "list": {
   "_type": "link",
   "url": "/imaging-stack",
   "action": "get",
   "description": "**FILTERS**\n\n-   **atlas**: One or more brain regions covered by a stack\n-   **name**: The image stack name\n\n[===> ImagingStack model reference](/admin/doc/models/experiments.imagingstack)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_acronym",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_id",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/imaging-stack",
   "action": "post"
  },
  "read": {
   "_type": "link",
   "url": "/imaging-stack/{id}",
   "action": "get",
   "description": "[===> ImagingStack model reference](/admin/doc/models/experiments.imagingstack)",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this imaging stack."
     }
    }
   ]
  }
 },
 "insertions": {
  "list": {
   "_type": "link",
   "url": "/insertions",
   "action": "get",
   "description": "**FILTERS**\n\n-   **name**: probe insertion name `/trajectories?name=probe00`\n-   **subject**: subject nickname: `/insertions?subject=Algernon`\n-   **date**: session date: `/inssertions?date=2020-01-15`\n-   **experiment_number**: session number `/insertions?experiment_number=1`\n-   **session**: session UUID`/insertions?session=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **task_protocol** (icontains)\n-   **location**: location name (icontains)\n-   **project**: project name (icontains)\n-   **model**: probe model name `/insertions?model=3A`\n-   **lab**: lab name (exact)\n-   **tag**: tag name (icontains)\n-   **dataset_types**: dataset type(s)\n-   **datasets**: datasets name(s)\n-   **dataset_qc_lte**: dataset QC value, e.g. PASS, WARNING, FAIL, CRITICAL\n-   **atlas_name**: returns a session if any channel name icontains\n the value: `/insertions?brain_region=visual cortex`\n-   **atlas_acronym**: returns a session if any of its channels name exactly\n matches the value `/insertions?atlas_acronym=SSp-m4`, cf Allen CCFv2017\n-   **atlas_id**: returns a session if any of its channels id matches the\n provided value: `/insertions?atlas_id=950`, cf Allen CCFv2017\n\n[===> probe insertion model reference](/admin/doc/models/experiments.probeinsertion)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "model",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "serial",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "auto_datetime",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "datasets",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "chronic_insertion",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "experiment_number",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset_types",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset_qc_lte",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "project",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "task_protocol",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "tag",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_acronym",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_id",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/insertions",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "model",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Model",
      "description": ""
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "serial",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Serial",
      "description": "Probe serial number"
     }
    },
    {
     "name": "chronic_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Chronic insertion",
      "description": ""
     }
    },
    {
     "name": "datasets",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Datasets",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/insertions/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this probe insertion."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/insertions/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this probe insertion."
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "model",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Model",
      "description": ""
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "serial",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Serial",
      "description": "Probe serial number"
     }
    },
    {
     "name": "chronic_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Chronic insertion",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/insertions/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this probe insertion."
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "model",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Model",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "serial",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Serial",
      "description": "Probe serial number"
     }
    },
    {
     "name": "chronic_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Chronic insertion",
      "description": ""
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/insertions/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this probe insertion."
     }
    }
   ]
  }
 },
 "labs": {
  "list": {
   "_type": "link",
   "url": "/labs",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "institution",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "address",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "timezone",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "reference_weight_pct",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "zscore_weight_pct",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "cage_type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "enrichment",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "food",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "cage_cleaning_frequency_days",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "light_cycle",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "repositories",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/labs",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "institution",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Institution",
      "description": ""
     }
    },
    {
     "name": "address",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Address",
      "description": ""
     }
    },
    {
     "name": "timezone",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Timezone",
      "description": "Timezone of the server (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
     }
    },
    {
     "name": "repositories",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Repositories",
      "description": ""
     }
    },
    {
     "name": "reference_weight_pct",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Reference weight pct",
      "description": "The minimum mouse weight is a linear combination of the reference weight and the zscore weight."
     }
    },
    {
     "name": "zscore_weight_pct",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Zscore weight pct",
      "description": "The minimum mouse weight is a linear combination of the reference weight and the zscore weight."
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/labs/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/labs/{name}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "institution",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Institution",
      "description": ""
     }
    },
    {
     "name": "address",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Address",
      "description": ""
     }
    },
    {
     "name": "timezone",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Timezone",
      "description": "Timezone of the server (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
     }
    },
    {
     "name": "repositories",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Repositories",
      "description": ""
     }
    },
    {
     "name": "reference_weight_pct",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Reference weight pct",
      "description": "The minimum mouse weight is a linear combination of the reference weight and the zscore weight."
     }
    },
    {
     "name": "zscore_weight_pct",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Zscore weight pct",
      "description": "The minimum mouse weight is a linear combination of the reference weight and the zscore weight."
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/labs/{name}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "institution",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Institution",
      "description": ""
     }
    },
    {
     "name": "address",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Address",
      "description": ""
     }
    },
    {
     "name": "timezone",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Timezone",
      "description": "Timezone of the server (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
     }
    },
    {
     "name": "repositories",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Repositories",
      "description": ""
     }
    },
    {
     "name": "reference_weight_pct",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Reference weight pct",
      "description": "The minimum mouse weight is a linear combination of the reference weight and the zscore weight."
     }
    },
    {
     "name": "zscore_weight_pct",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Zscore weight pct",
      "description": "The minimum mouse weight is a linear combination of the reference weight and the zscore weight."
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/labs/{name}",
   "action": "delete",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  }
 },
 "locations": {
  "list": {
   "_type": "link",
   "url": "/locations",
   "action": "get",
   "description": "Lists Lab Location",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/locations/{name}",
   "action": "get",
   "description": "Allows viewing of full detail and deleting a water administration.",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/locations/{name}",
   "action": "put",
   "encoding": "application/json",
   "description": "Allows viewing of full detail and deleting a water administration.",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/locations/{name}",
   "action": "patch",
   "encoding": "application/json",
   "description": "Allows viewing of full detail and deleting a water administration.",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  }
 },
 "new-download": {
  "create": {
   "_type": "link",
   "url": "/new-download",
   "action": "post",
   "description": "REST query data field to log a download:\n```\ndata = {'user': 'labmember_name',\n        'datasets': 'pk1',    # supports multiple pks as a list\n        'projects': 'project_name')   # supports multiple projects as a list\n```\n\nIf there are multiple projects and multiple datasets, each datasets will be logged as\ndownloaded for all projects."
  }
 },
 "notes": {
  "list": {
   "_type": "link",
   "url": "/notes",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/notes",
   "action": "post",
   "encoding": "application/json",
   "description": "If an image is provided, the request body can contain an additional item\n\n`width`: desired width to resize the image for storage. Aspect ratio will be maintained.\nOptions are\n\n- **None** to use the UPLOADED_IMAGE_WIDTH specified in settings (default)\n- **'orig'** to keep original image size\n- any **integer** to specify the image width",
   "fields": [
    {
     "name": "user",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date time",
      "description": ""
     }
    },
    {
     "name": "content_type",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Content type",
      "description": ""
     }
    },
    {
     "name": "object_id",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Object id",
      "description": "UUID, an object of content_type with this ID must already exist to attach a note."
     }
    },
    {
     "name": "text",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Text",
      "description": "String, content of the note or description of the image."
     }
    },
    {
     "name": "image",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Image",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/notes/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this note."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/notes/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this note."
     }
    },
    {
     "name": "user",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date time",
      "description": ""
     }
    },
    {
     "name": "content_type",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Content type",
      "description": ""
     }
    },
    {
     "name": "object_id",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Object id",
      "description": "UUID, an object of content_type with this ID must already exist to attach a note."
     }
    },
    {
     "name": "text",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Text",
      "description": "String, content of the note or description of the image."
     }
    },
    {
     "name": "image",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Image",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/notes/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this note."
     }
    },
    {
     "name": "user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date time",
      "description": ""
     }
    },
    {
     "name": "content_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Content type",
      "description": ""
     }
    },
    {
     "name": "object_id",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Object id",
      "description": "UUID, an object of content_type with this ID must already exist to attach a note."
     }
    },
    {
     "name": "text",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Text",
      "description": "String, content of the note or description of the image."
     }
    },
    {
     "name": "image",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Image",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/notes/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this note."
     }
    }
   ]
  }
 },
 "procedures": {
  "list": {
   "_type": "link",
   "url": "/procedures",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/procedures",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Detailed description of the procedure"
     }
    }
   ]
  }
 },
 "projects": {
  "list": {
   "_type": "link",
   "url": "/projects",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/projects",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Description of the project"
     }
    },
    {
     "name": "users",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Users",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/projects/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/projects/{name}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Description of the project"
     }
    },
    {
     "name": "users",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Users",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/projects/{name}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": "Description of the project"
     }
    },
    {
     "name": "users",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Users",
      "description": ""
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/projects/{name}",
   "action": "delete",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  }
 },
 "register-file": {
  "create": {
   "_type": "link",
   "url": "/register-file",
   "action": "post",
   "description": "Endpoint to create a register a dataset record through the REST API.\n\nThe session is retrieved by the ALF convention in the relative path, so this field has to\nmatch the format Subject/Date/Number as shown below.\n\nThe set of repositories are given through the labs. The lab is by default the subject lab,\nbut if it is specified, it overrides the subject lab entirely.\n\nOne repository or lab is mandatory, as this is the repository where the files\ncurrently exist It can be identified either by name (recommended) or hostname\n(compatibility).\nThe client side REST query should look like this:\n\n```python\nr_ = {'created_by': 'user_name_alyx',\n      'name': 'repository_name_alyx',  # optional, will be added if doesn't match lab\n      'path': 'ZM_1085/2019-02-12/002/alf',  # relative path to repo path\n      'filenames': ['file1', 'file2'],\n      'labs': 'alyxlabname1',  # optional, will get the subjects lab if not used\n      'hashes': ['f9c26e42-8f22-4f07-8fdd-bb51a63bedaa',\n               'f9c26e42-8f22-4f07-8fdd-bb51a63bedad']  # optional\n      'filesizes': [145684, 354213],    # optional\n      'qc': ['NOT_SET', 'PASS'],  # optional\n      'server_only': True,   # optional, defaults to False. Will only create file\n      # records in the server repositories and skips local repositories\n      'versions': ['1.4.4', '1.4.4'],  # optional, usually refers to the software version\n      # used to generate the file\n      'default': False #optional , defaults to True, if more than one revision of dataset,\n      whether to set current one as the default\n      'check_protected: False # optional, defaults to False, before attempting to register\n      datasets checks if any are protected\n      }\n```\n\nFor backward compatibility the following is allowed (projects are labs the repo lookup\nis done on the hostname instead of the repository name):\n```python\n r_ = {'hostname': 'repo_hostname_alyx', # optional, will be added if doesn't match lab\n       'projects': 'alyx_lab_name',  # optional, alias of lab field above\n      }\n```\n\nIf the dataset already exists, it will use the file hash to deduce if the file has been\npatched or not (i.e. the filerecords will be created as not existing)"
  }
 },
 "revisions": {
  "list": {
   "_type": "link",
   "url": "/revisions",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/revisions",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "created_datetime",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created datetime",
      "description": "created date"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/revisions/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/revisions/{name}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "created_datetime",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created datetime",
      "description": "created date"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/revisions/{name}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "created_datetime",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Created datetime",
      "description": "created date"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/revisions/{name}",
   "action": "delete",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    }
   ]
  }
 },
 "sessions": {
  "list": {
   "_type": "link",
   "url": "/sessions",
   "action": "get",
   "description": "**FILTERS**\n\n-   **subject**: subject nickname `/sessions?subject=Algernon`\n-   **dataset_types**: dataset type(s) `/sessions?dataset_types=trials.table,camera.times`\n-   **datasets**: dataset name(s) `/sessions?datasets=_ibl_leftCamera.times.npy`\n-   **dataset_qc_lte**: dataset QC values less than or equal to this\n    `/sessions?dataset_qc_lte=WARNING`\n-   **number**: session number\n-   **users**: experimenters (exact)\n-   **date_range**: date `/sessions?date_range=2020-01-12,2020-01-16`\n-   **lab**: lab name (exact)\n-   **task_protocol** (icontains)\n-   **location**: location name (icontains)\n-   **projects**: project name (icontains)\n-   **json**: queries on json fields, for example here `tutu`\n    -   exact/equal lookup: `/sessions?extended_qc=tutu,True`,\n    -   gte lookup: `/sessions/?extended_qc=tutu__gte,0.5`,\n-   **extended_qc** queries on json fields, for example here `qc_bool` and `qc_pct`,\n    values and fields come by pairs, using semi-colon as a separator\n    -   exact/equal lookup: `/sessions?extended_qc=qc_bool;True`,\n    -   gte lookup: `/sessions/?extended_qc=qc_pct__gte;0.5`,\n    -   chained lookups: `/sessions/?extended_qc=qc_pct__gte;0.5;qc_bool;True`,\n-   **performance_gte**, **performance_lte**: percentage of successful trials gte/lte\n-   **brain_region**: returns a session if any channel name icontains the value:\n    `/sessions?brain_region=visual cortex`\n-   **atlas_acronym**: returns a session if any of its channels name exactly matches the value\n    `/sessions?atlas_acronym=SSp-m4`, cf Allen CCFv2017\n-   **atlas_id**: returns a session if any of its channels id matches the provided value:\n    `/sessions?atlas_id=950`, cf Allen CCFv2017\n-   **qc**: returns sessions for which the qc statuses matches provided string. Should be\none of CRITICAL, ERROR, WARNING, NOT_SET, PASS\n    `/sessions?qc=CRITICAL`\n-   **histology**: returns sessions for which the subject has an histology session:\n    `/sessions?histology=True`\n-   **django**: generic filter allowing lookups (same syntax as json filter)\n    `/sessions?django=projects__name__icontains,matlab`\n    filters sessions that have matlab in the project names\n    `/sessions?django=~projects__name__icontains,matlab`\n    does the exclusive set: filters sessions that do not have matlab in the project names\n\n[===> session model reference](/admin/doc/models/actions.session)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "users",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "procedures",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "narrative",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "end_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "parent_session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "projects",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "number",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "task_protocol",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "n_trials",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "n_correct_trials",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "qc",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "extended_qc",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "auto_datetime",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "nickname",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date_range",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset_types",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "datasets",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "dataset_qc_lte",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "performance_gte",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "performance_lte",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "project",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_acronym",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "atlas_id",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "histology",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "tag",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/sessions",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "subject",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Start time",
      "description": ""
     }
    },
    {
     "name": "number",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Number",
      "description": "Optional session number for this level"
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "projects",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Projects",
      "description": ""
     }
    },
    {
     "name": "task_protocol",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Task protocol",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/sessions/{id}",
   "action": "get",
   "description": "Detail of one session",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this session."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/sessions/{id}",
   "action": "put",
   "encoding": "application/json",
   "description": "Detail of one session",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this session."
     }
    },
    {
     "name": "subject",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "users",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Users",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Location",
      "description": ""
     }
    },
    {
     "name": "procedures",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Procedures",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "projects",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Projects",
      "description": ""
     }
    },
    {
     "name": "type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Type",
      "description": "User-defined session type (e.g. Base, Experiment)"
     }
    },
    {
     "name": "task_protocol",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Task protocol",
      "description": ""
     }
    },
    {
     "name": "number",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Number",
      "description": "Optional session number for this level"
     }
    },
    {
     "name": "start_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Start time",
      "description": ""
     }
    },
    {
     "name": "end_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "End time",
      "description": ""
     }
    },
    {
     "name": "narrative",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Narrative",
      "description": ""
     }
    },
    {
     "name": "parent_session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Parent session",
      "description": "Hierarchical parent to this session"
     }
    },
    {
     "name": "n_correct_trials",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "N correct trials",
      "description": ""
     }
    },
    {
     "name": "n_trials",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "N trials",
      "description": ""
     }
    },
    {
     "name": "extended_qc",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Extended qc",
      "description": "Structured data about session QC, formatted in a user-defined way"
     }
    },
    {
     "name": "qc",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Qc",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/sessions/{id}",
   "action": "patch",
   "encoding": "application/json",
   "description": "Detail of one session",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this session."
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "users",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Users",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Location",
      "description": ""
     }
    },
    {
     "name": "procedures",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Procedures",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "projects",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Projects",
      "description": ""
     }
    },
    {
     "name": "type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Type",
      "description": "User-defined session type (e.g. Base, Experiment)"
     }
    },
    {
     "name": "task_protocol",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Task protocol",
      "description": ""
     }
    },
    {
     "name": "number",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Number",
      "description": "Optional session number for this level"
     }
    },
    {
     "name": "start_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Start time",
      "description": ""
     }
    },
    {
     "name": "end_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "End time",
      "description": ""
     }
    },
    {
     "name": "narrative",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Narrative",
      "description": ""
     }
    },
    {
     "name": "parent_session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Parent session",
      "description": "Hierarchical parent to this session"
     }
    },
    {
     "name": "n_correct_trials",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "N correct trials",
      "description": ""
     }
    },
    {
     "name": "n_trials",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "N trials",
      "description": ""
     }
    },
    {
     "name": "extended_qc",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Extended qc",
      "description": "Structured data about session QC, formatted in a user-defined way"
     }
    },
    {
     "name": "qc",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Qc",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/sessions/{id}",
   "action": "delete",
   "description": "Detail of one session",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this session."
     }
    }
   ]
  }
 },
 "subjects": {
  "list": {
   "_type": "link",
   "url": "/subjects",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "nickname",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "species",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "litter",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "sex",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "strain",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "genotype",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "genotype_test",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "source",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "line",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "birth_date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "death_date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "wean_date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "genotype_date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "responsible_user",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "projects",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "cage",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "request",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "ear_mark",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "protocol_number",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "cull_method",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "adverse_effects",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "actual_severity",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "to_be_genotyped",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "to_be_culled",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "reduced",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "reduced_date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "alive",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "stock",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "water_restricted",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "project",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/subjects",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "nickname",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Nickname",
      "description": "Easy-to-remember name (e.g. 'Hercules')."
     }
    },
    {
     "name": "responsible_user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Responsible user",
      "description": ""
     }
    },
    {
     "name": "birth_date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Birth date",
      "description": ""
     }
    },
    {
     "name": "death_date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Death date",
      "description": ""
     }
    },
    {
     "name": "species",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Species",
      "description": ""
     }
    },
    {
     "name": "sex",
     "location": "form",
     "schema": {
      "_type": "enum",
      "title": "Sex",
      "description": "",
      "enum": [
       "M",
       "F",
       "U"
      ]
     }
    },
    {
     "name": "litter",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Litter",
      "description": ""
     }
    },
    {
     "name": "strain",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Strain",
      "description": ""
     }
    },
    {
     "name": "source",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Source",
      "description": ""
     }
    },
    {
     "name": "line",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Line",
      "description": ""
     }
    },
    {
     "name": "projects",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Projects",
      "description": ""
     }
    },
    {
     "name": "lab",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "genotype",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Genotype",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/subjects/{nickname}",
   "action": "get",
   "fields": [
    {
     "name": "nickname",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "nickname",
      "description": "Easy-to-remember name (e.g. 'Hercules')."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/subjects/{nickname}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "nickname",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "nickname",
      "description": "Easy-to-remember name (e.g. 'Hercules')."
     }
    },
    {
     "name": "nickname",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Nickname",
      "description": "Easy-to-remember name (e.g. 'Hercules')."
     }
    },
    {
     "name": "responsible_user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Responsible user",
      "description": ""
     }
    },
    {
     "name": "birth_date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Birth date",
      "description": ""
     }
    },
    {
     "name": "death_date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Death date",
      "description": ""
     }
    },
    {
     "name": "species",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Species",
      "description": ""
     }
    },
    {
     "name": "sex",
     "location": "form",
     "schema": {
      "_type": "enum",
      "title": "Sex",
      "description": "",
      "enum": [
       "M",
       "F",
       "U"
      ]
     }
    },
    {
     "name": "litter",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Litter",
      "description": ""
     }
    },
    {
     "name": "strain",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Strain",
      "description": ""
     }
    },
    {
     "name": "source",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Source",
      "description": ""
     }
    },
    {
     "name": "line",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Line",
      "description": ""
     }
    },
    {
     "name": "projects",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Projects",
      "description": ""
     }
    },
    {
     "name": "lab",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/subjects/{nickname}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "nickname",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "nickname",
      "description": "Easy-to-remember name (e.g. 'Hercules')."
     }
    },
    {
     "name": "nickname",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Nickname",
      "description": "Easy-to-remember name (e.g. 'Hercules')."
     }
    },
    {
     "name": "responsible_user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Responsible user",
      "description": ""
     }
    },
    {
     "name": "birth_date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Birth date",
      "description": ""
     }
    },
    {
     "name": "death_date",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Death date",
      "description": ""
     }
    },
    {
     "name": "species",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Species",
      "description": ""
     }
    },
    {
     "name": "sex",
     "location": "form",
     "schema": {
      "_type": "enum",
      "title": "Sex",
      "description": "",
      "enum": [
       "M",
       "F",
       "U"
      ]
     }
    },
    {
     "name": "litter",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Litter",
      "description": ""
     }
    },
    {
     "name": "strain",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Strain",
      "description": ""
     }
    },
    {
     "name": "source",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Source",
      "description": ""
     }
    },
    {
     "name": "line",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Line",
      "description": ""
     }
    },
    {
     "name": "projects",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Projects",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/subjects/{nickname}",
   "action": "delete",
   "fields": [
    {
     "name": "nickname",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "nickname",
      "description": "Easy-to-remember name (e.g. 'Hercules')."
     }
    }
   ]
  }
 },
 "surgeries": {
  "list": {
   "_type": "link",
   "url": "/surgeries",
   "action": "get",
   "description": "**FILTERS**\n\n-   **subject**: subject nickname `/sessions?subject=Algernon`\n[===> session model reference](/admin/doc/models/actions.surgery)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "users",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "procedures",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "narrative",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "end_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "outcome_type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "implant_weight",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "nickname",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date_range",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "procedure",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/surgeries/{id}",
   "action": "get",
   "description": "Allows viewing of full detail and update of a surgery.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this surgery."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/surgeries/{id}",
   "action": "put",
   "encoding": "application/json",
   "description": "Allows viewing of full detail and update of a surgery.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this surgery."
     }
    },
    {
     "name": "subject",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "narrative",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Narrative",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Start time",
      "description": ""
     }
    },
    {
     "name": "end_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "End time",
      "description": ""
     }
    },
    {
     "name": "outcome_type",
     "location": "form",
     "schema": {
      "_type": "enum",
      "title": "Outcome type",
      "description": "",
      "enum": [
       "a",
       "r",
       "n"
      ]
     }
    },
    {
     "name": "implant_weight",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Implant weight",
      "description": "Implant weight in grams"
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Location",
      "description": "The physical location at which the surgery was performed"
     }
    },
    {
     "name": "users",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Users",
      "description": "The user(s) involved in this action"
     }
    },
    {
     "name": "procedures",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Procedures",
      "description": "The procedure(s) performed"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/surgeries/{id}",
   "action": "patch",
   "encoding": "application/json",
   "description": "Allows viewing of full detail and update of a surgery.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this surgery."
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "narrative",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Narrative",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Start time",
      "description": ""
     }
    },
    {
     "name": "end_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "End time",
      "description": ""
     }
    },
    {
     "name": "outcome_type",
     "location": "form",
     "schema": {
      "_type": "enum",
      "title": "Outcome type",
      "description": "",
      "enum": [
       "a",
       "r",
       "n"
      ]
     }
    },
    {
     "name": "implant_weight",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Implant weight",
      "description": "Implant weight in grams"
     }
    },
    {
     "name": "lab",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Lab",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Location",
      "description": "The physical location at which the surgery was performed"
     }
    },
    {
     "name": "users",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Users",
      "description": "The user(s) involved in this action"
     }
    },
    {
     "name": "procedures",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Procedures",
      "description": "The procedure(s) performed"
     }
    }
   ]
  }
 },
 "sync-file-status": {
  "read": {
   "_type": "link",
   "url": "/sync-file-status",
   "action": "get"
  },
  "create": {
   "_type": "link",
   "url": "/sync-file-status",
   "action": "post"
  }
 },
 "tags": {
  "list": {
   "_type": "link",
   "url": "/tags",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/tags",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "protected",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Protected",
      "description": ""
     }
    },
    {
     "name": "public",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Public",
      "description": ""
     }
    },
    {
     "name": "hash",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hash",
      "description": "Hash of the data buffer, SHA-1 is 40 hex chars, while md5is 32 hex chars"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/tags/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/tags/{name}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "protected",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Protected",
      "description": ""
     }
    },
    {
     "name": "public",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Public",
      "description": ""
     }
    },
    {
     "name": "hash",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hash",
      "description": "Hash of the data buffer, SHA-1 is 40 hex chars, while md5is 32 hex chars"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/tags/{name}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": "Long name"
     }
    },
    {
     "name": "description",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Description",
      "description": ""
     }
    },
    {
     "name": "protected",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Protected",
      "description": ""
     }
    },
    {
     "name": "public",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Public",
      "description": ""
     }
    },
    {
     "name": "hash",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Hash",
      "description": "Hash of the data buffer, SHA-1 is 40 hex chars, while md5is 32 hex chars"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/tags/{name}",
   "action": "delete",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": "Long name"
     }
    }
   ]
  }
 },
 "tasks": {
  "list": {
   "_type": "link",
   "url": "/tasks",
   "action": "get",
   "description": "**FILTERS**\n-   **task**: task name `/jobs?task=EphysSyncPulses`\n-   **session**: uuid `/jobs?session=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **lab**: lab name from session table `/jobs?lab=churchlandlab`\n-   **pipeline**: pipeline field from task `/jobs?pipeline=ephys`\n\n[===> task model reference](/admin/doc/models/jobs.task)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "priority",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "io_charge",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "level",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "gpu",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "cpu",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "ram",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "time_out_secs",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "time_elapsed_secs",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "executable",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "graph",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "status",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "log",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "version",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "parents",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "datetime",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "arguments",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "data_repository",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/tasks",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "parents",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Parents",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "data_repository",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data repository",
      "description": ""
     }
    },
    {
     "name": "status",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Status",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "priority",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Priority",
      "description": ""
     }
    },
    {
     "name": "io_charge",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Io charge",
      "description": ""
     }
    },
    {
     "name": "level",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Level",
      "description": ""
     }
    },
    {
     "name": "gpu",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Gpu",
      "description": ""
     }
    },
    {
     "name": "cpu",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Cpu",
      "description": ""
     }
    },
    {
     "name": "ram",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Ram",
      "description": ""
     }
    },
    {
     "name": "time_out_secs",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Time out secs",
      "description": ""
     }
    },
    {
     "name": "time_elapsed_secs",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Time elapsed secs",
      "description": ""
     }
    },
    {
     "name": "executable",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Executable",
      "description": "Usually the Python class name on the workers"
     }
    },
    {
     "name": "graph",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Graph",
      "description": "The name of the graph containing a set of related and possibly dependent tasks"
     }
    },
    {
     "name": "log",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Log",
      "description": ""
     }
    },
    {
     "name": "version",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Version",
      "description": "version of the algorithm generating the file"
     }
    },
    {
     "name": "arguments",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Arguments",
      "description": "dictionary of input arguments"
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/tasks/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this task."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/tasks/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this task."
     }
    },
    {
     "name": "parents",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Parents",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "data_repository",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data repository",
      "description": ""
     }
    },
    {
     "name": "status",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Status",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "priority",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Priority",
      "description": ""
     }
    },
    {
     "name": "io_charge",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Io charge",
      "description": ""
     }
    },
    {
     "name": "level",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Level",
      "description": ""
     }
    },
    {
     "name": "gpu",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Gpu",
      "description": ""
     }
    },
    {
     "name": "cpu",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Cpu",
      "description": ""
     }
    },
    {
     "name": "ram",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Ram",
      "description": ""
     }
    },
    {
     "name": "time_out_secs",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Time out secs",
      "description": ""
     }
    },
    {
     "name": "time_elapsed_secs",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Time elapsed secs",
      "description": ""
     }
    },
    {
     "name": "executable",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Executable",
      "description": "Usually the Python class name on the workers"
     }
    },
    {
     "name": "graph",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Graph",
      "description": "The name of the graph containing a set of related and possibly dependent tasks"
     }
    },
    {
     "name": "log",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Log",
      "description": ""
     }
    },
    {
     "name": "version",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Version",
      "description": "version of the algorithm generating the file"
     }
    },
    {
     "name": "arguments",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Arguments",
      "description": "dictionary of input arguments"
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/tasks/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this task."
     }
    },
    {
     "name": "parents",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Parents",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "data_repository",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Data repository",
      "description": ""
     }
    },
    {
     "name": "status",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Status",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    },
    {
     "name": "priority",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Priority",
      "description": ""
     }
    },
    {
     "name": "io_charge",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Io charge",
      "description": ""
     }
    },
    {
     "name": "level",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Level",
      "description": ""
     }
    },
    {
     "name": "gpu",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Gpu",
      "description": ""
     }
    },
    {
     "name": "cpu",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Cpu",
      "description": ""
     }
    },
    {
     "name": "ram",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Ram",
      "description": ""
     }
    },
    {
     "name": "time_out_secs",
     "location": "form",
     "schema": {
      "_type": "integer",
      "title": "Time out secs",
      "description": ""
     }
    },
    {
     "name": "time_elapsed_secs",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Time elapsed secs",
      "description": ""
     }
    },
    {
     "name": "executable",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Executable",
      "description": "Usually the Python class name on the workers"
     }
    },
    {
     "name": "graph",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Graph",
      "description": "The name of the graph containing a set of related and possibly dependent tasks"
     }
    },
    {
     "name": "log",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Log",
      "description": ""
     }
    },
    {
     "name": "version",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Version",
      "description": "version of the algorithm generating the file"
     }
    },
    {
     "name": "arguments",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Arguments",
      "description": "dictionary of input arguments"
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/tasks/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this task."
     }
    }
   ]
  }
 },
 "trajectories": {
  "list": {
   "_type": "link",
   "url": "/trajectories",
   "action": "get",
   "description": "**FILTERS**\n\n-   **provenance**: probe insertion provenance\n    must one of the strings among those choices:\n    'Ephys aligned histology track', 'Histology track', 'Micro-manipulator', 'Planned'\n    `/trajectories?provenance=Planned`\n-   **subject: subject nickname: `/trajectories?subject=Algernon`\n-   **date**: session date: `/trajectories?date=2020-01-15`\n-   **experiment_number**: session number `/trajectories?experiment_number=1`\n-   **session**: `/trajectories?session=aad23144-0e52-4eac-80c5-c4ee2decb198`\n-   **probe**: probe_insertion name `/trajectories?probe=probe01`\n\n[===> trajectory model reference](/admin/doc/models/experiments.trajectoryestimate)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "probe_insertion",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "chronic_insertion",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "x",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "y",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "z",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "depth",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "theta",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "phi",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "roll",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "provenance",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "coordinate_system",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "datetime",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "project",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "experiment_number",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "probe",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/trajectories",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "probe_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Probe insertion",
      "description": ""
     }
    },
    {
     "name": "x",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "X",
      "description": ""
     }
    },
    {
     "name": "y",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Y",
      "description": ""
     }
    },
    {
     "name": "z",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Z",
      "description": ""
     }
    },
    {
     "name": "depth",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Depth",
      "description": ""
     }
    },
    {
     "name": "theta",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Theta",
      "description": ""
     }
    },
    {
     "name": "phi",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Phi",
      "description": ""
     }
    },
    {
     "name": "roll",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Roll",
      "description": ""
     }
    },
    {
     "name": "provenance",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Provenance",
      "description": ""
     }
    },
    {
     "name": "coordinate_system",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Coordinate system",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "chronic_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Chronic insertion",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/trajectories/{id}",
   "action": "get",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this trajectory estimate."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/trajectories/{id}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this trajectory estimate."
     }
    },
    {
     "name": "probe_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Probe insertion",
      "description": ""
     }
    },
    {
     "name": "x",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "X",
      "description": ""
     }
    },
    {
     "name": "y",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Y",
      "description": ""
     }
    },
    {
     "name": "z",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Z",
      "description": ""
     }
    },
    {
     "name": "depth",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Depth",
      "description": ""
     }
    },
    {
     "name": "theta",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Theta",
      "description": ""
     }
    },
    {
     "name": "phi",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Phi",
      "description": ""
     }
    },
    {
     "name": "roll",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Roll",
      "description": ""
     }
    },
    {
     "name": "provenance",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Provenance",
      "description": ""
     }
    },
    {
     "name": "coordinate_system",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Coordinate system",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "chronic_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Chronic insertion",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/trajectories/{id}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this trajectory estimate."
     }
    },
    {
     "name": "probe_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Probe insertion",
      "description": ""
     }
    },
    {
     "name": "x",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "X",
      "description": ""
     }
    },
    {
     "name": "y",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Y",
      "description": ""
     }
    },
    {
     "name": "z",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Z",
      "description": ""
     }
    },
    {
     "name": "depth",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Depth",
      "description": ""
     }
    },
    {
     "name": "theta",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Theta",
      "description": ""
     }
    },
    {
     "name": "phi",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Phi",
      "description": ""
     }
    },
    {
     "name": "roll",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Roll",
      "description": ""
     }
    },
    {
     "name": "provenance",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Provenance",
      "description": ""
     }
    },
    {
     "name": "coordinate_system",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Coordinate system",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "chronic_insertion",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Chronic insertion",
      "description": ""
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/trajectories/{id}",
   "action": "delete",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this trajectory estimate."
     }
    }
   ]
  }
 },
 "uploaded": {
  "read": {
   "_type": "link",
   "url": "/uploaded/{img_url}",
   "action": "get",
   "fields": [
    {
     "name": "img_url",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  }
 },
 "users": {
  "list": {
   "_type": "link",
   "url": "/users",
   "action": "get",
   "description": "**FILTERS**\n- 'id'\n- 'username'\n- 'email'\n- 'subjects_responsible'\n- 'lab'\n- 'allowed_users'\n[===> user model reference](/admin/doc/models/misc.labmember)",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "password",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "last_login",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "is_superuser",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "groups",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "user_permissions",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "username",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "first_name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "last_name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "email",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "is_staff",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "is_active",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date_joined",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "is_stock_manager",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "allowed_users",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "is_public_user",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/users",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "username",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Username",
      "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
     }
    },
    {
     "name": "email",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Email address",
      "description": ""
     }
    },
    {
     "name": "subjects_responsible",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Subjects responsible",
      "description": ""
     }
    },
    {
     "name": "allowed_users",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Allowed users",
      "description": ""
     }
    },
    {
     "name": "is_stock_manager",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Is stock manager",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/users/{username}",
   "action": "get",
   "fields": [
    {
     "name": "username",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "username",
      "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/users/{username}",
   "action": "put",
   "encoding": "application/json",
   "fields": [
    {
     "name": "username",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "username",
      "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
     }
    },
    {
     "name": "username",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Username",
      "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
     }
    },
    {
     "name": "email",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Email address",
      "description": ""
     }
    },
    {
     "name": "subjects_responsible",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Subjects responsible",
      "description": ""
     }
    },
    {
     "name": "allowed_users",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Allowed users",
      "description": ""
     }
    },
    {
     "name": "is_stock_manager",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Is stock manager",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/users/{username}",
   "action": "patch",
   "encoding": "application/json",
   "fields": [
    {
     "name": "username",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "username",
      "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
     }
    },
    {
     "name": "username",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Username",
      "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
     }
    },
    {
     "name": "email",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Email address",
      "description": ""
     }
    },
    {
     "name": "subjects_responsible",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Subjects responsible",
      "description": ""
     }
    },
    {
     "name": "allowed_users",
     "location": "form",
     "schema": {
      "_type": "array",
      "title": "Allowed users",
      "description": ""
     }
    },
    {
     "name": "is_stock_manager",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Is stock manager",
      "description": ""
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/users/{username}",
   "action": "delete",
   "fields": [
    {
     "name": "username",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "username",
      "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
     }
    }
   ]
  }
 },
 "water-administrations": {
  "list": {
   "_type": "link",
   "url": "/water-administrations",
   "action": "get",
   "description": "Lists or creates a new water administration.",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "user",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "water_administered",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "water_type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "adlib",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "nickname",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "users",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date_range",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/water-administrations",
   "action": "post",
   "encoding": "application/json",
   "description": "Lists or creates a new water administration.",
   "fields": [
    {
     "name": "subject",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date time",
      "description": ""
     }
    },
    {
     "name": "water_administered",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Water administered",
      "description": "Water administered, in milliliters"
     }
    },
    {
     "name": "water_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Water type",
      "description": ""
     }
    },
    {
     "name": "user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "adlib",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Adlib",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/water-administrations/{id}",
   "action": "get",
   "description": "Allows viewing of full detail and deleting a water administration.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this water administration."
     }
    }
   ]
  },
  "update": {
   "_type": "link",
   "url": "/water-administrations/{id}",
   "action": "put",
   "encoding": "application/json",
   "description": "Allows viewing of full detail and deleting a water administration.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this water administration."
     }
    },
    {
     "name": "subject",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date time",
      "description": ""
     }
    },
    {
     "name": "water_administered",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Water administered",
      "description": "Water administered, in milliliters"
     }
    },
    {
     "name": "water_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Water type",
      "description": ""
     }
    },
    {
     "name": "user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "adlib",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Adlib",
      "description": ""
     }
    }
   ]
  },
  "partial_update": {
   "_type": "link",
   "url": "/water-administrations/{id}",
   "action": "patch",
   "encoding": "application/json",
   "description": "Allows viewing of full detail and deleting a water administration.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this water administration."
     }
    },
    {
     "name": "subject",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date time",
      "description": ""
     }
    },
    {
     "name": "water_administered",
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Water administered",
      "description": "Water administered, in milliliters"
     }
    },
    {
     "name": "water_type",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Water type",
      "description": ""
     }
    },
    {
     "name": "user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    },
    {
     "name": "session",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Session",
      "description": ""
     }
    },
    {
     "name": "adlib",
     "location": "form",
     "schema": {
      "_type": "boolean",
      "title": "Adlib",
      "description": ""
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/water-administrations/{id}",
   "action": "delete",
   "description": "Allows viewing of full detail and deleting a water administration.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this water administration."
     }
    }
   ]
  }
 },
 "water-requirement": {
  "read": {
   "_type": "link",
   "url": "/water-requirement/{nickname}",
   "action": "get",
   "fields": [
    {
     "name": "nickname",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  }
 },
 "water-restricted-subjects": {
  "list": {
   "_type": "link",
   "url": "/water-restricted-subjects",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  }
 },
 "water-restriction": {
  "list": {
   "_type": "link",
   "url": "/water-restriction",
   "action": "get",
   "description": "Lists water restriction.",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "users",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "procedures",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "narrative",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "start_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "end_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "reference_weight",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "water_type",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "nickname",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date_range",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  }
 },
 "water-type": {
  "list": {
   "_type": "link",
   "url": "/water-type",
   "action": "get",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/water-type",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/water-type/{name}",
   "action": "get",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    }
   ]
  },
  "create_0": {
   "_type": "link",
   "url": "/water-type/{name}",
   "action": "post",
   "encoding": "application/json",
   "fields": [
    {
     "name": "name",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "name",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "form",
     "schema": {
      "_type": "object",
      "title": "Json",
      "description": "Structured data, formatted in a user-defined way"
     }
    },
    {
     "name": "name",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Name",
      "description": ""
     }
    }
   ]
  }
 },
 "weighings": {
  "list": {
   "_type": "link",
   "url": "/weighings",
   "action": "get",
   "description": "Lists or creates a new weighing.",
   "fields": [
    {
     "name": "limit",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Limit",
      "description": "Number of results to return per page."
     }
    },
    {
     "name": "offset",
     "location": "query",
     "schema": {
      "_type": "integer",
      "title": "Offset",
      "description": "The initial index from which to return the results."
     }
    },
    {
     "name": "id",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "name",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "json",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "user",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "subject",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "weight",
     "location": "query",
     "schema": {
      "_type": "number",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "django",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "nickname",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "users",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "date_range",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "lab",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    },
    {
     "name": "location",
     "location": "query",
     "schema": {
      "_type": "string",
      "title": "",
      "description": ""
     }
    }
   ]
  },
  "create": {
   "_type": "link",
   "url": "/weighings",
   "action": "post",
   "encoding": "application/json",
   "description": "Lists or creates a new weighing.",
   "fields": [
    {
     "name": "subject",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Subject",
      "description": ""
     }
    },
    {
     "name": "date_time",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "Date time",
      "description": ""
     }
    },
    {
     "name": "weight",
     "required": true,
     "location": "form",
     "schema": {
      "_type": "number",
      "title": "Weight",
      "description": "Weight in grams"
     }
    },
    {
     "name": "user",
     "location": "form",
     "schema": {
      "_type": "string",
      "title": "User",
      "description": ""
     }
    }
   ]
  },
  "read": {
   "_type": "link",
   "url": "/weighings/{id}",
   "action": "get",
   "description": "Allows viewing of full detail and deleting a weighing.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this weighing."
     }
    }
   ]
  },
  "delete": {
   "_type": "link",
   "url": "/weighings/{id}",
   "action": "delete",
   "description": "Allows viewing of full detail and deleting a weighing.",
   "fields": [
    {
     "name": "id",
     "required": true,
     "location": "path",
     "schema": {
      "_type": "string",
      "title": "id",
      "description": "A UUID string identifying this weighing."
     }
    }
   ]
  }
 }
}