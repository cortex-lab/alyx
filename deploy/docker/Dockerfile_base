FROM ubuntu/apache2:latest

# python unbuffered allows to get real-time logs
ENV PYTHONUNBUFFERED 1
ENV TZ=Europe/London
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone


# Install services, packages and perform cleanup
RUN apt-get update && apt-get install -y \
    awscli \
    bash \
    build-essential \
    certbot \
    gcc \
    git \
    libapache2-mod-wsgi-py3 \
    libpq-dev \
    software-properties-common \
    vim \
    w3m \
    wget

# The apt-add-repository command is installed by software-properties common above
ARG PYTHON=python3.12
RUN apt-get update && apt-get install -y ${PYTHON} ${PYTHON}-venv

# Clean up
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

RUN echo "root:Docker!" | chpasswd

# Alyx application installation
RUN git clone --branch master https://github.com/cortex-lab/alyx.git /var/www/alyx
# Best practice for configuring python venv
ENV VIRTUAL_ENV=/var/www/alyx/.venv
RUN ${PYTHON} -m venv ${VIRTUAL_ENV}
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
WORKDIR /var/www/alyx
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir dj-database-url

# create reports application
RUN git clone --branch main https://github.com/int-brain-lab/iblalyx.git /home/iblalyx \
    && ln -s /home/iblalyx/management/ibl_reports /var/www/alyx/alyx/ibl_reports \
    && ln -s /home/iblalyx/management/ibl_reports/templates /var/www/alyx/alyx/templates/ibl_reports \
    && pip install --no-cache-dir -r /home/iblalyx/requirements.txt

# Apache ENVs
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_PID_FILE /var/run/apache2/apache2.pid

RUN mkdir -p ${APACHE_LOG_DIR} \
    && touch ${APACHE_LOG_DIR}/django.log \
    && touch ${APACHE_LOG_DIR}/django.json \
    && chown -R ${APACHE_RUN_USER}:${APACHE_RUN_GROUP} ${APACHE_LOG_DIR}

# Apache configs
COPY apache-conf-alyx /etc/apache2/apache2.conf
COPY 000-default-conf-alyx /etc/apache2/sites-available/000-default.conf
RUN a2enmod rewrite
RUN a2enmod ssl
RUN a2enmod wsgi
